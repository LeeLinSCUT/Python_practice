（一）Cpython和PyPy的区别：
       Cpython是python解释器，是用C语言开发的。PyPy也是Python解释器，采用JIT技术，对Python代码进行动态编译（而不是解释）。
       代码在这两个解释下运行时，要了解他们的不同点。
（二）直接运行py文件和Python交互模式的区别：
       直接输入python进入了交互模式，相当于启动的解释器。但是等待一行一行输入代码。直接运行.py文件相当于直接启动了python解释器，
       一次性把文件的源代码给执行了。
（三）数据类型
       （1）整数
       （2）浮点数
              整数和浮点数在计算机内部的存储的方式是不同的，整数运算永远是精确的，而浮点数运算则可能会有四舍五入的误差。
       （3）字符串
              是由单引号或者双引号括起来的任意文本，如果字符串中也有单引号或者双引号，使用转义字符\。r'xxx'表示xxx默认里面的字符串不转义。
              '''...'''表示多行内容。<-这是在交互式命令行内输入的，会自动进行换行）
       （4）布尔值
              布尔值只有Ture、False两种值，可以用AND,OR,NOT运算。
       （5）空值
              用None表示，是一种特殊的值。
        (6)list(列表）   >>> classmates = ['Michael', 'Bob', 'Tracy']
              list是一种有序的集合，可以随时添加和删除其中的元素。索引是从0开始的。
        (7)tuple（元组） >>>classmates = ('Michael', 'Bob', 'Tracy')
        不可变的tuple有什么意义？因为tuple不可变，所以代码更安全。如果可能，能用tuple代替list就尽量用tuple。不变是指向的内存空间地址永远不变。
        所以，只有1个元素的tuple定义时必须加一个逗号,，来消除歧义.避免被（）被以为是数学上的小括号。
（四）数据对象
       （1）变量
              可以是任意数据类型，可以把任意数据类型赋值给变量。
       （2）常量
              仍然是一个变量     
（五）内存分配
       a = 'ABC' #在内存中创建了一个空间存储ABC字符串（应该是为ASCII编码后的数据）。变量a指向这个存储空间的地址，这个变量a应该存储的ABC的地址（？）
       b = a     #a指向的地址（存储ABC）给了b变量，那么b变量就应该存储的是一个地址（存储ABC）
       a = 'XYZ' #在内存中又创建了一个空间存储XYZ字符串，变量a的数值变成了这个新的空间的地址。
       print(b)  #但是b仍然指向老的ABC的空间地址，所以输出b的结果仍然是ABC
（六）除法
       在Python中，有两种除法，一种除法是/./的除法计算结果是浮点数，即使是两个整数恰话整除，结果也是浮点数。
       另外一种是//，称为地板除，结果是整数。
（七）ASCII、Unicode和UTF-8的关系
       ASCII只有单字节，Unicode最常用的是用两个字符表示一个字符。UTF-8根据不同的数字大小编写成1-6字节。
       （1）计算机通用的字符编码工作方式
       在计算机内存中，统一使用Unicoude编码。当需要保存到硬盘或者需要传输的时候，就转换为UTF-8编码。
       用记事本编辑的时候，从文件读取的UTF-8字符被转换为Unicode字符到内存里，保存的时候再把Unicode转换成UTF-8保存到文件里。
（八）Python的字符串
       （1）Python3版本字符串是以Unicode编码的，在内存中以Unicode表示。如果要在网络上传输，或者保存在磁盘上，就需要把str变为字节为单位的bytes。
       （2）Python对bytes类型的数据用带b前缀的单引号或双引号表示。我们从网络或磁盘上读取了字节流，那么读到的数据就是bytes。要把bytes变为str。
       （3）在操作字符串时，我们经常遇到str和bytes的相互转换。为了避免乱码问题，应当始终使用UTF-8编码对str和bytes进行转换。
       （4）Python的源代码也是一个文本文件，保存原代码的时候，务必保存为UTF-8。当Python解释器读取源代码时，让它按照UTF-8编码读取。
           #!/usr/bin/env python3   #告诉Linux/OS X系统，这是一个Python可执行程序
           # -*- coding: utf-8 -*-  #告诉解释器，按照UTF-8编码读取源代码。
（九）格式化
       %运算符是用来格式字符串的，在字符串内部，%s表示用字符串替换，%d表示用整数替换，有多少个%？占位符，后面就跟几个变量。在字符串里用%%表示%
       %d	整数
       %f	浮点数
       %s	字符串
       %x	十六进制整数
       可以用如下的方式，对格式进行进一步的控制：
       %[(name)][flags][width].[precision]typecode
       (name)为命名
       flags可以有+,-,' '或0。+表示右对齐。-表示左对齐。' '为一个空格，表示在正数的左侧填充一个空格，从而与负数对齐。0表示使用0填充。
       width表示显示宽度
       precision表示小数点后精度
           'Hi, %s, you have $%d.' % ('Michael', 1000000)
           另外一种格式化字符串的方法是使用字符串的format（）方法，会使用传入函数的参数依次替换字符串内的占位符{0},{1}...
