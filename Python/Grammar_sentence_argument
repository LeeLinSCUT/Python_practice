（一）条件判断
  if语句的完整形式就是：
  if <条件判断1>:
    <执行1>
  elif <条件判断2>:
    <执行2>
  elif <条件判断3>:
    <执行3>
  else:
    <执行4>
  这一个过程更像是if取一个集合A，esif集合A以外的集合B，esif集合B以外的集合C，esif集合C以外的集合D，else：剩下的所有情况。
（二）循环语句
  Python的循环有两种，一种是for...in循环，依次把list或tuple中的每个元素迭代出来。
  names = ['Michael', 'Bob', 'Tracy']
  for name in names:
    print(name)  #所以for x in ...循环就是把每个元素代入变量x，然后执行缩进块的语句。
  while是第二种循环。
  continue的作用是提前结束本轮循环，并直接开始下一轮循环。
  （三）dict
  dict使用键-值（key-value）存储，具有极快的查找速度。dict的key必须是不可变对象。
  在Python中，字符串、整数等都是不可变的，因此，可以放心地作为key。而list是可变的，就不能作为key。
  >>> d = {'Michael': 95, 'Bob': 75, 'Tracy': 85}
  >>> d['Michael']
  95
  和list比较，dict有以下几个特点：
  1.查找和插入的速度极快，不会随着key的增加而变慢；
  2.需要占用大量的内存，内存浪费多。
  而list相反：
  1.查找和插入的时间随着元素的增加而增加；
  2.占用空间小，浪费内存很少。
  （四）set
  set和dict类似，也是一组key的集合，但不存储value。由于key不能重复，所以，在set中，没有重复的key。
  要创建一个set，需要提供一个list作为输入集合：（只是作为输入的集合，不代表这两者是相等的，set的元素和输入的list的元素是一样的）
  >>> s = set([1, 2, 3])
  >>> s
  {1, 2, 3}
  set可以看成数学意义上的无序和无重复元素的集合，因此，两个set可以做数学意义上的交集、并集等操作：
  （四）可变对象和不可变对象（str是不变对象，list是可变对象）
  所以，对于不变对象来说，调用对象自身的任意方法，也不会改变该对象自身的内容。相反，这些方法会创建新的对象并返回，这样，
  就保证了不可变对象本身永远是不可变的。
  （五）函数
   函数名其实就是指向一个函数对象的引用，完全可以把函数名赋给一个变量，相当于给这个函数起了一个“别名”.
   (六）定义函数
   def my_abs(x):
    if not isinstance(x, (int, float)):    #内置函数isinstance（），对参数类型做检查，只允许整数和浮点数类型的参数。
        raise TypeError('bad operand type')
    if x >= 0:
        return x
    else:
        return -x
    多返回值的时候返回值是一个tuple！但是，在语法上，返回一个tuple可以省略括号，而多个变量可以同时接收一个tuple，
    按位置赋给对应的值，所以，Python的函数返回多值其实就是返回一个tuple，但写起来更方便。
  (七）函数的参数
    （1）位置参数（2）默认参数： 定义默认参数要牢记一点：默认参数必须指向不变对象！
    （3）可变参数：*num 传入参数：1，2，3，4···
      可变参数就是传入的参数个数是可变的，可以是1个、2个到任意个，还可以是0个。
      *nums表示把nums这个list的所有元素作为可变参数传进去。这种写法相当有用，而且很常见。
      可变参数允许你传入0个或任意个参数，这些可变参数在函数调用时自动组装为一个tuple。然后赋给num。
     （4）关键字参数：**kw  传入参数：city='Beijing'
     而关键字参数允许你传入0个或任意个含参数名的参数，这些关键字参数在函数内部自动组装为一个dict。其实就是在该关键字参数传入一组dict。
     **dict表示把dict的所有key-value用关键字参数传入到函数的**kw参数。kw将获得一个dict。这个kw是对dict的一份拷贝。
     （5）命名关键字参数
     使用命名关键字参数时，要特别注意，如果没有可变参数，就必须加一个*作为特殊分隔符。如果缺少*，Python解释器将无法识别位置参数和命名关键字参数：
     def person(name, age, *args, city, job):
    print(name, age, args, city, job)
   （八）参数组合
      参数定义的顺序必须是：必选参数、默认参数、可变参数、命名关键字参数和关键字参数。
   （九）递归函数
     在函数内部，可以调用其他函数。如果一个函数在内部调用自身本身，这个函数就是递归函数。
     函数调用是通过栈这种数据结构实现的，每调用一个函数，栈就会加一层，当函数返回，栈就会减一层。解决递归调用栈的方法就是在返回撤栈的时候同时调用。
     汉诺塔函数：当n=1的时候满足最后的一步基本功能，当n=2的时候满足递归的时候的另外一项基本功能。然后将n=2所实现的功能扩展。从最外层的函数外壳看是
     功能扩展后结果，而且是正确的。
