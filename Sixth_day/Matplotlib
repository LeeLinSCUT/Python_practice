(1)import matplotlib.pyplot as plt 
  plt.figure(num=3,figsize=(8,5)) #定义一个图像窗口
  plt.plot(,y,color='red',linewidth=1.0,linestyle='--',lable='up')#画线，该线名字为up
  plt.plot(x,y1，lable='down') #该线名字为down
  
  plt.xlim((-1,2))  #设置横坐标范围
  plt.xticks(new_ticks) #设置x轴坐标点  new_ticks = np.linspace(-1,2,5) 画五个点。
  plt.ylim((-2,3))  #设置竖坐标范围
  plt.xlable('I am x') #设置x轴标签
  plt.ylable('I am y') #设置y轴标签
  
 
  plt.show()   #显示图像
  
（2）调整坐标轴
    ax = plt.gca() #获取当前坐标轴信息
    ax.spines['right'].set_color('none') #设置边框颜色 none为消失，因此右边的边框消失了。
    ax.xaxis.set_ticks_position("bottom") #设置坐标位置 是边框的那条边 将x轴设置为bottom边，这把bottom和x轴绑定在一起了
    ax.spines['bottom'].set_position(('data',-1)) #把bottom边放置到了left边的-1处。
    ax.spines['left'].set_position(('axes',0.1))  #把letf边放置到bottom的10%的地方
 
（3）图例（legend)
    
 plt.legend()     #打上图例

(4）标注
  plt.annotate(r'$2x+1=%s$' % y0, xy=(x0, y0), xycoords='data', xytext=(+30, -30),
             textcoords='offset points', fontsize=16,
             arrowprops=dict(arrowstyle='->', connectionstyle="arc3,rad=.2"))
   plt.text(-3.7, 3, r'$This\ is\ the\ some\ text. \mu\ \sigma_i\ \alpha_t$',
         fontdict={'size': 16, 'color': 'r'})
（5）Image
    plt.imshow(a, interpolation='nearest', cmap='bone', origin='lower') #a是伪图像，origin用upper会颠倒 
（6）3D图像
  from mpl_toolkits.mplot3d import Axes3D 
  fig = plt.figure() #创建一个空的窗户
  ax = Axes3D(fig)   #在空间里创建一组3D坐标
  # X, Y value
X = np.arange(-4, 4, 0.25)
Y = np.arange(-4, 4, 0.25)
X, Y = np.meshgrid(X, Y)    # x-y 平面的网格左边建立
R = np.sqrt(X ** 2 + Y ** 2)
# height value
Z = np.sin(R)
ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap=plt.get_cmap('rainbow'))
 
(7)动态显示图片
plt.ion() #正常显示模式默认为block模式，即是运行到plt.show()之后，程序会暂停到那儿，并不会继续执行下去。plt.ion()会继续执行。
plt.pause(time(int)) #
